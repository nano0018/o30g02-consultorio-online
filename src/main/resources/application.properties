# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database
spring.datasource.url = $jdbc:mysql://aws.connect.psdb.cloud/consultorio-citas?sslMode=VERIFY_IDENTITY

# Username and password
spring.datasource.username = 2vw0ozv0sv2fubninkkm
spring.datasource.password = pscale_pw_WHk6yfEWAdowmbr1oN2Etwi08qvvlQbh2zHBpUdKKqC

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.mvc.view.prefix=/WEB-INF/templates
server.port=${PORT}

#Log Levels
logging.level.org.springframework=DEBUG
logging.level.com.howtodoinjava=DEBUG

# Log to File
logging.file=${java.io.tmpdir}/app.log

# Log Patterns
logging.pattern.console= %d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file= %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%